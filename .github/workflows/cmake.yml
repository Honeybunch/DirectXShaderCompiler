name: CMake

on: [push]

jobs:

  # Windows build uses hctbuild
  build_windows:
    name: "Windows"
    runs-on: windows-latest
    env:
        HLSL_SRC_DIR: ${{github.workspace}}
        HLSL_BLD_DIR: ${{github.workspace}}\build
    steps:
    - uses: actions/checkout@v2
      with:
          lfs: true
          submodules: recursive
    - uses: actions/setup-python@v2.2.1 # Get Python3
    - uses: lukka/get-cmake@v3.19.2     # Get CMake and Ninja
      
    - name: Configure
      working-directory: ${{github.workspace}}
      run: utils\hct\hctstart ${{github.workspace}} ${{github.workspace}}/build
      
    - name: Build Release
      working-directory: ${{github.workspace}}
      run: utils\hct\hctbuild -x64 -release -vs2019 -spirvtest
      
    #- name: Test Release
    #  working-directory: ${{github.workspace}}
    #  run: utils\hct\hcttest -rel
    
    - name: Package Release
      working-directory: ${{github.workspace}}
      shell: bash
      run: cmake -E tar "cfv" "dxc-Windows-${{github.run_number}}.7z" --format=7zip ./build/Release
      
    - name: Create Github Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: dxc-${{github.run_number}}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/dxc-Windows-${{github.run_number}}.7z
        asset_name: dxc-Windows-${{github.run_number}}.7z
        asset_content_type: application/x-7z-compressed
      
  # Unix platforms use cmake
  build_unix:
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Linux"
            os: ubuntu-latest
          - name: "Mac"
            os: macos-latest

    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}

    steps:
    - uses: actions/checkout@v2
      with:
          lfs: true
          submodules: recursive
    - uses: actions/setup-python@v2.2.1 # Get Python3
    - uses: egor-tensin/setup-clang@v1  # Get Clang
      if: startsWith(runner.os, 'macos') != true
    - uses: lukka/get-cmake@v3.19.2     # Get CMake and Ninja
      
    - name: Configure
      shell: bash
      working-directory: ${{github.workspace}}
      run: cmake -B build -G "Ninja Multi-Config" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dxc -DSPIRV_BUILD_TESTS=ON $(cat ${{github.workspace}}/utils/cmake-predefined-config-params)
      
    - name: Build Release
      working-directory: ${{github.workspace}}
      shell: bash
      run: cmake --build build --config Release
      
    - name: Install Release
      working-directory: ${{github.workspace}}
      shell: bash
      run: cmake --install build --config Release
      
    - name: Test Release
      working-directory: ${{github.workspace}}
      shell: bash
      run: ctest --build build --config Release
      
    - name: Package Release
      working-directory: ${{github.workspace}}
      shell: bash
      run: cmake -E tar "cfv" "dxc-${{matrix.config.name}}-${{github.run_number}}.7z" --format=7zip ${{github.workspace}}/dxc
      
    - name: Create Github release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: dxc-${{github.run_number}}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/dxc-${{matrix.config.name}}-${{github.run_number}}.7z
        asset_name: dxc-${{matrix.config.name}}-${{github.run_number}}.7z
        asset_content_type: application/x-7z-compressed
       
